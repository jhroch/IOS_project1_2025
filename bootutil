#!/bin/bash

# Výchozí adresář
BOOT_DIR="/boot/loader/entries/"

# -b přesměrování adresáře
while [ $# -gt 0 ]; do
    case "$1" in
        -b)
            BOOT_DIR="$2"
            shift 2
            ;;
        *)
            break
            ;;
    esac
done

# Kontrola jestli adresář existuje
if [ ! -d "$BOOT_DIR" ]; then
    echo "Chyba: Adresář $BOOT_DIR neexistuje!" >&2
    exit 1
fi

# Získání příkazu
COMMAND="$1"
shift

# Rozdělení podle příkazu
case "$COMMAND" in
    list)
        # Kontrola, jestli jsou v adresáři .conf soubory
        conf_found=0
        for file in "$BOOT_DIR"/*.conf; do
                if [ -f "$file" ]; then
                conf_found=1
                break
                fi
        done

        if [ $conf_found -eq 0 ]; then
                echo "Chyba: Žádné .conf soubory v $BOOT_DIR!" >&2
                exit 1
        fi

        # Výchozí chování bez přepínačů
        if [ $# -eq 0 ]; then
                for file in "$BOOT_DIR"/*.conf; do
                title=$(grep "^title " "$file" | tail -n1 | cut -d " " -f 2-)
                version=$(grep "^version " "$file" | tail -n1 | cut -d " " -f 2-)
                linux=$(grep "^linux " "$file" | tail -n1 | cut -d " " -f 2-)
                echo "$title ($version, $linux)"
                done
                exit 0
        fi

        # Přepínače
        title_regex=""
        kernel_regex=""
        sort_by_file=0
        sort_by_key=0

        while [ $# -gt 0 ]; do
                case "$1" in
                -f)
                        sort_by_file=1
                        shift
                        ;;
                -s)
                        sort_by_key=1
                        shift
                        ;;
                -t)
                        if [ -z "$2" ]; then
                        echo "Chyba: -t vyžaduje regulární výraz!" >&2
                        exit 1
                        fi
                        title_regex="$2"
                        shift 2
                        ;;
                -k)
                        if [ -z "$2" ]; then
                        echo "Chyba: -k vyžaduje regulární výraz!" >&2
                        exit 1
                        fi
                        kernel_regex="$2"
                        shift 2
                        ;;
                *)
                        echo "Neznámý přepínač '$1'" >&2
                        shift
                        ;;
                esac
        done

        # Jeden cyklus pro všechny přepínače
        # # Řazení podle file
        if [ $sort_by_file -eq 1 ]; then
                for file in $(ls -1 "$BOOT_DIR"/*.conf | sort); do
                title=$(grep "^title " "$file" | tail -n1 | cut -d " " -f 2-)
                version=$(grep "^version " "$file" | tail -n1 | cut -d " " -f 2-)
                linux=$(grep "^linux " "$file" | tail -n1 | cut -d " " -f 2-)
                # Jestli se neshoduje title_regex
                if [ -n "$title_regex" ] && ! echo "$title" | grep -E "$title_regex" > /dev/null; then
                        continue
                fi
                # Jestli se neshoduje kernel_regex
                if [ -n "$kernel_regex" ] && ! echo "$linux" | grep -E "$kernel_regex" > /dev/null; then
                        continue
                fi
                echo "$title ($version, $linux)"
                done
        # Řazení podle sort-key
        elif [ $sort_by_key -eq 1 ]; then
                ( for file in "$BOOT_DIR"/*.conf; do
                title=$(grep "^title " "$file" | tail -n1 | cut -d " " -f 2-)
                version=$(grep "^version " "$file" | tail -n1 | cut -d " " -f 2-)
                linux=$(grep "^linux " "$file" | tail -n1 | cut -d " " -f 2-)
                sort_key=$(grep "^sort-key " "$file" | tail -n1 | cut -d " " -f 2-)
                # Pokud sort_key neexistuje, vytvoř hodně vysoký klíč (~) (řazení jako poslední)
                if [ -z "$sort_key" ]; then
                        sort_key="~$(basename "$file")"
                else
                        sort_key="$sort_key$(basename "$file")"
                fi
                # Jestli se neshoduje title_regex
                if [ -n "$title_regex" ] && ! echo "$title" | grep -E "$title_regex" > /dev/null; then
                        continue
                fi
                # Jestli se neshoduje kernel_regex
                if [ -n "$kernel_regex" ] && ! echo "$linux" | grep -E "$kernel_regex" > /dev/null; then
                        continue
                fi
                echo "$sort_key|$title ($version, $linux)"
                done ) | sort | cut -d'|' -f 2-
        # Bez řazení
        else
                for file in "$BOOT_DIR"/*.conf; do
                title=$(grep "^title " "$file" | tail -n1 | cut -d " " -f 2-)
                version=$(grep "^version " "$file" | tail -n1 | cut -d " " -f 2-)
                linux=$(grep "^linux " "$file" | tail -n1 | cut -d " " -f 2-)
                if [ -n "$title_regex" ] && ! echo "$title" | grep -E "$title_regex" > /dev/null; then
                        continue
                fi
                if [ -n "$kernel_regex" ] && ! echo "$linux" | grep -E "$kernel_regex" > /dev/null; then
                        continue
                fi
                echo "$title ($version, $linux)"
                done
        fi
    ;;

    remove)
        TITLE_REGEX="$1"
        for file in "$BOOT_DIR"/*.conf; do
            title=$(grep "^title " "$file" | tail -n1 | cut -d " " -f 2-)
            if echo "$title" | grep -E "$TITLE_REGEX" > /dev/null; then
                rm -f "$file"
            fi
        done
        ;;

    duplicate)
        ENTRY_FILE_PATH="$1"
        # Pokud není zadána cesta, hledáme výchozí položku
        if [ -z "$ENTRY_FILE_PATH" ] || [ ! -f "$ENTRY_FILE_PATH" ]; then
                for file in "$BOOT_DIR"/*.conf; do
                if [ -f "$file" ] && grep -q "^vutfit_default y" "$file"; then
                        ENTRY_FILE_PATH="$file"
                        break
                fi
                done
                if [ -z "$ENTRY_FILE_PATH" ] || [ ! -f "$ENTRY_FILE_PATH" ]; then
                        echo "Chyba: Není zadána cesta a žádná výchozí položka nenalezena!" >&2
                        exit 1
                fi
        else
                shift # Posun jestli je zadaná cesta
        fi

        # Výchozí hodnoty pro novou položku
        kernel_path=$(grep "^linux " "$ENTRY_FILE_PATH" | tail -n1 | cut -d " " -f 2-)
        initrd_path=$(grep "^initrd " "$ENTRY_FILE_PATH" | tail -n1 | cut -d " " -f 2-)
        title=$(grep "^title " "$ENTRY_FILE_PATH" | tail -n1 | cut -d " " -f 2-)
        version=$(grep "^version " "$ENTRY_FILE_PATH" | tail -n1 | cut -d " " -f 2-)
        options=$(grep "^options " "$ENTRY_FILE_PATH" | tail -n1 | cut -d " " -f 2-)
        sort_key=$(grep "^sort-key " "$ENTRY_FILE_PATH" | tail -n1 | cut -d " " -f 2-)
        make_default=0
        destination=""

        # Zpracování přepínačů
        while [ $# -gt 0 ]; do
                case "$1" in
                -k)
                        kernel_path="$2"
                        shift 2
                        ;;
                -i)
                        initrd_path="$2"
                        shift 2
                        ;;
                -t)
                        title="$2"
                        shift 2
                        ;;
                -a)
                        # Přidání parametrů do options
                        new_args="$2"
                        echo "$options $new_args" | xargs -n1 | sort -u | xargs > "$BOOT_DIR"temp
                        options=$(cat "$BOOT_DIR"temp)
                        rm -f "$BOOT_DIR"temp
                        shift 2
                        ;;
                -r)
                        # Odstranění parametrů z options
                        remove_args="$2"
                        echo "$options" | xargs -n1 | grep -v -E "^($remove_args|${remove_args}=.*)$" | xargs > "$BOOT_DIR"temp
                        options=$(cat "$BOOT_DIR"temp)
                        rm -f "$BOOT_DIR"temp
                        shift 2
                        ;;
                -d)
                        destination="$2"
                        shift 2
                        ;;
                --make-default)
                        make_default=1
                        shift
                        ;;
                *)
                        echo "Neznámý přepínač: $1" >&2
                        shift
                        ;;
                esac
        done

        # Generování názvu nového souboru, pokud není zadán -d
        if [ -z "$destination" ]; then
                base_name=$(basename "$ENTRY_FILE_PATH" .conf)
                i=1
                destination="$BOOT_DIR/${base_name}_copy$i.conf"
                while [ -f "$destination" ]; do
                i=$((i + 1))
                destination="$BOOT_DIR/${base_name}_copy$i.conf"
                done
        fi

        # Vytvoření nového souboru
        {
                echo "title $title"
                echo "version $version"
                echo "linux $kernel_path"
                echo "initrd $initrd_path"
                echo "options $options"
                [ -n "$sort_key" ] && echo "sort-key $sort_key"
                echo "vutfit_default n"
        } > "$destination"

        # Nastavení jako výchozí, pokud je zadán --make-default
        if [ "$make_default" -eq 1 ]; then
                # Zrušení předchozí výchozí položky
                for file in "$BOOT_DIR"/*.conf; do
                if [ "$file" != "$destination" ] && grep -q "^vutfit_default y" "$file"; then
                        sed -i "s/^vutfit_default y/vutfit_default n/" "$file"
                fi
                done
                # Nastavení nové položky jako výchozí
                sed -i "s/^vutfit_default n/vutfit_default y/" "$destination"
        fi

        echo "Položka duplikována do: $destination"
        ;;

    show-default)
        for file in "$BOOT_DIR"/*.conf; do
            default=$(grep "^vutfit_default " "$file" | tail -n1 | cut -d " " -f 2-)
            if [ "$default" = "y" ]; then
                if [ "$1" != "-f" ]; then
                    cat "$file"
                    exit 0
                else
                    echo "$file"
                    exit 0
                fi
            fi
        done
        exit 1 # Pokud se nenajde žádný výchozí soubor
        ;;

    make-default)
        ENTRY_FILE_PATH="$1"
        # Nalezení předešlého výchozího souboru
        oldDefault=""
        for file in "$BOOT_DIR"/*.conf; do
            default=$(grep "^vutfit_default " "$file" | tail -n1 | cut -d " " -f 2-)
            if [ "$default" = "y" ]; then
                oldDefault="$file"
                break
            fi
        done

        if [ "$oldDefault" = "$ENTRY_FILE_PATH" ]; then
            echo "Zadaná položka už je výchozí"
            exit 0
        fi

        if [ ! -f "$ENTRY_FILE_PATH" ]; then
            echo "Zadaná cesta k souboru neexistuje" >&2
            exit 1
        fi

        # Nastavení předešlého výchozího souboru na nevýchozí
        sed -i "s/vutfit_default y/vutfit_default n/" "$oldDefault"
        # Nahrazení řádku s "n" na řádek s "y"
        if grep -q "^vutfit_default " "$ENTRY_FILE_PATH"; then
            sed -i "s/vutfit_default n/vutfit_default y/" "$ENTRY_FILE_PATH"
        # Přidání řádku s "y" pokud žádný vutfit_default řádek neexistuje
        else
            echo # \n pro jistotu, aby neskočil společně na předešlém řádku
            echo "vutfit_default y" >> "$ENTRY_FILE_PATH"
        fi
        echo "Výchozí položka změněna na '$ENTRY_FILE_PATH'"
        ;;

    *)
        echo "Neznámý příkaz: $COMMAND" >&2
        exit 1
        ;;
esac